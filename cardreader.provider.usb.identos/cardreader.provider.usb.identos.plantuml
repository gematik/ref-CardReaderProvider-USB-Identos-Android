@startuml

title __CARDREADER.PROVIDER.USB.IDENTOS's Class Diagram__\n

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    class de.gematik.ti.cardreader.provider.usb.identos.BuildConfig {
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    class de.gematik.ti.cardreader.provider.usb.identos.BuildConfig {
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace activities {
      class de.gematik.ti.cardreader.provider.usb.identos.activities.UsbReceiveActivity {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.identos.control.IdentosCardReaderController {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.identos.control.IdentosCardReaderProvider {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.identos.control.IdentosEventListener {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.identos.control.IdentosUsbReceiver {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace control {
      class de.gematik.ti.cardreader.provider.usb.identos.control.MockContext {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCard {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCardChannel {
      }
    }
  }
  

  namespace de.gematik.ti.cardreader.provider.usb.identos {
    namespace entities {
      class de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCardReader {
      }
    }
  }
  

  de.gematik.ti.cardreader.provider.usb.identos.activities.UsbReceiveActivity -up-|> android.app.Activity
  de.gematik.ti.cardreader.provider.usb.identos.control.IdentosCardReaderController -up-|> de.gematik.ti.openhealthcard.common.AbstractAndroidCardReaderController
  de.gematik.ti.cardreader.provider.usb.identos.control.IdentosCardReaderController o-- de.gematik.ti.cardreader.provider.usb.identos.control.IdentosUsbReceiver : identosUsbReceiver
  de.gematik.ti.cardreader.provider.usb.identos.control.IdentosCardReaderProvider .up.|> de.gematik.ti.cardreader.provider.spi.ICardReaderControllerProvider
  de.gematik.ti.cardreader.provider.usb.identos.control.IdentosEventListener .up.|> com.identos.android.id100.library.ccid.OnCardEventListener
  de.gematik.ti.cardreader.provider.usb.identos.control.IdentosUsbReceiver -up-|> android.content.BroadcastReceiver
  de.gematik.ti.cardreader.provider.usb.identos.control.MockContext -up-|> android.content.Context
  de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCard .up.|> de.gematik.ti.cardreader.provider.api.card.ICard
  de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCard o-- de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCardChannel : basicChannel
  de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCardChannel .up.|> de.gematik.ti.cardreader.provider.api.card.ICardChannel
  de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCardChannel o-- de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCard : card
  de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCardReader .up.|> de.gematik.ti.cardreader.provider.api.ICardReader
  de.gematik.ti.cardreader.provider.usb.identos.entities.IdentosCardReader o-- de.gematik.ti.cardreader.provider.usb.identos.control.IdentosEventListener : eventListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
